// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  username  String
  role      String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id       String  @id @default(uuid())
  username String
  phone    String
  orders   Order[]
}

model Menu {
  id          String      @id @default(uuid())
  name        String      @unique
  description String
  price       Float
  stock       Int
  category    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItems  OrderItem[]
}

model Order {
  id         String   @id @default(uuid())
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customerId String

  orderItems OrderItem[]
  Customer   Customer    @relation(fields: [customerId], references: [id])
  Table      Table?      @relation(fields: [tableId], references: [id])
  tableId    String?
}

model OrderItem {
  id        String   @id @default(uuid())
  quantity  Int
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  menuId    String
  menu      Menu     @relation(fields: [menuId], references: [id])
}

model Table {
  id        String   @id @default(uuid())
  number    Int      @unique
  capacity  Int
  status    String   @default("available")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}
